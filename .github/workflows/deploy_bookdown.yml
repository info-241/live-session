on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: Build and deploy book

jobs:
  build:
    runs-on: macOS-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KNITR_OPTIONS: "knitr.chunk.tidy=TRUE"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install R
        uses: r-lib/actions/setup-r@v2

      - name: Install rmarkdown and dependencies
        run: |
          Rscript -e 'install.packages(c("rmarkdown","bookdown"))'
          Rscript -e 'install.packages(c("tidyverse", "data.table", "sandwich", "stargazer", "lmtest", "AER", "patchwork", "magrittr"))'

      - name: Install Pandoc
        if: ${{ ! github.event.inputs.ghpages }}
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.17.1.1'

      - uses: cderv/actions/setup-pandoc-nightly@nightly-pandoc
        # install nightly when checking on gh-pages
        if: github.event.inputs.ghpages

      - name: Install TinyTeX
        uses: r-lib/actions/setup-tinytex@v2
        env:
          # install full prebuilt version
          TINYTEX_INSTALLER: TinyTeX

      - name: Install OS dependencies
        run: |
          brew update
          brew install --cask xquartz
          brew install --cask calibre
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::.
          needs: book

      - name: Install phamtomJS for webshot
        run: |
          webshot::install_phantomjs()
        shell: Rscript {0}

      - name: Cache bookdown results
        uses: actions/cache@v2
        with:
          path: inst/examples/_bookdown_files
          key: bookdown-${{ hashFiles('inst/examples/*Rmd') }}
          restore-keys: bookdown-

      - name: Test build of HTML books
        if: github.event_name == 'pull_request'
        run: make -C inst/examples gitbook bs4_book

      - name: Build and Deploy all book
        if: github.event_name == 'push'
        env:
          CONNECT_API_KEY: ${{ secrets.RSC_BOOKDOWN_ORG_TOKEN }}
          CONTENT_ID: 3
        run: make -C inst/examples all

      - name: Build Gitbook only
        env:
          DEPLOY_GH_PAGES: ${{ github.event.inputs.ghpages }}
        if: github.event_name == 'workflow_dispatch'
        run: make -C inst/examples gitbook

      - name: Deploy Gitbook to gh-pages
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.ghpages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: inst/examples/_book

      - name: Upload book folder for debug
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: book-dir
          path: inst/examples


  

# name: renderbook

# jobs:
#   bookdown:
#     name: Render-Book
#     runs-on: macOS-latest
#     steps:
#       - uses: actions/checkout@v1
#       - uses: r-lib/actions/setup-r@v1
#       - uses: r-lib/actions/setup-pandoc@v1
#       - name: Install rmarkdown
#         run: Rscript -e 'install.packages(c("rmarkdown","bookdown"))'
#       - name: Install additional packages
#         run: Rscript -e 'install.packages(c("tidyverse", "data.table", "sandwich", "stargazer", "lmtest", "AER", "patchwork", "magrittr"))'
#       - name: Render Git Book
#         run: Rscript -e 'bookdown::render_book("index.Rmd", output_format="bookdown::gitbook")'
# #      - name: Render PDF Book
# #        run: Rscript -e 'bookdown::render_book("index.Rmd", output_format="bookdown::pdf_book")'
#       - uses: actions/upload-artifact@v1
#         with:
#           name: _book
#           path: _book/

# # Need to first create an empty gh-pages branch
# # see https://pkgdown.r-lib.org/reference/deploy_site_github.html
# # and also add secrets for a GH_PAT and EMAIL to the repository
# # gh-action from Cecilapp/GitHub-Pages-deploy
#   checkout-and-deploy:
#    runs-on: ubuntu-latest
#    needs: bookdown
#    steps:
#      - name: Checkout
#        uses: actions/checkout@master
#      - name: Download artifact
#        uses: actions/download-artifact@v1.0.0
#        with:
#          # Artifact name
#          name: _book # optional
#          # Destination path
#          path: _book # optional
#      - name: Deploy to GitHub Pages
#        uses: Cecilapp/GitHub-Pages-deploy@master
#        env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # moves to session GH token
#        with:
#           email     : dhughes@berkeley.edu
#           build_dir : _book
#           jekyll    : no
