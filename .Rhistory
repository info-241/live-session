fill="Decrease"),
width=0.5,
position="stack") +
geom_text(
aes(
x=emotions, y=-decrease,
label=paste(formatC(100 * decrease,digits=1, format="f"), "%")),
hjust=-.1,
colour = "white") +
annotate("text", x=3.7, y=-0.0008, label="< Decrease   Increase >") +
geom_hline(yintercept=0) +
expand_limits(x=4) +
scale_y_continuous(limits=c(-.065, .065)) +
labs(
title="Changes in Voting Behavior",
fill="Voting Behavior",
x=NULL,
y="Fraction of Subjects") +
theme(legend.position="none") +
coord_flip()
getwd()
getwd("~/MIDS/w241/live-session/")
setwd("~/MIDS/w241/live-session/")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
install.packages('stargazer')
bookdown::render_book()
install.packages('AER')
bookdown::render_book()
bookdown::render_book(output_format = 'pdf')
bookdown::render_book(output_format = pdf_book())
?bookdown::render_book
bookdown::render_book(output_format = "pdf_book")
bookdown::render_book(output_format = "pdf_document")
>>>>>>> 126f5e465b18d5a3a0f16c4ee1713dd5ea56b40a
install.packages("bookdown")
install.packages("stargazer")
renv::activate()
install.packages(c("stargazer", "data.table", "AER", "ggplot2"))
renv::status()
install.packages("bookdown")
renv::snapshot()
library(data.table)
library(ggplot2)
library(stargazer)
library(sandwich)
library(lmtest)
theme_set(theme_minimal())
rse <- function(model) {
sqrt(diag(vcovHC(model)))
}
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## the bad control is *very* related to treatment
d[, bad_control := tau*D + epsilon]
# d[, y0 := runif(min=-10, max=10, n=.N) + bad_control ]
d[, Y := y0 + bad_control + tau*D + epsilon]
}
d <- make_data(n_rows=10000)
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(bad_control ~ D)]
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3)),
omit.stat = c('ser', 'f')
)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## the bad control is *very* related to treatment
d[, bad_control := tau*D + epsilon]
# d[, y0 := runif(min=-10, max=10, n=.N) + bad_control ]
d[, Y := y0 + bad_control + epsilon]
}
d <- make_data(n_rows=10000)
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(bad_control ~ D)]
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3)),
omit.stat = c('ser', 'f')
)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## send 1/2 the effect through the bad control
## and the other 1/2 through a direct channel
d[, bad_control := .5*tau*D + epsilon]
d[, Y := y0 + bad_control + .5*tau*D + epsilon]
}
d <- make_data(n_rows=10000)
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(bad_control ~ D)]
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3)),
omit.stat = c('ser', 'f')
)
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(Y ~ bad_control)]
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3)),
omit.stat = c('ser', 'f')
)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## send 1/2 the effect through the bad control
## and the other 1/2 through a direct channel
d[, bad_control := .5*tau*D + epsilon]
d[, Y := y0 + bad_control + .5*tau*D + epsilon]
}
d <- make_data(n_rows=10000)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## send 1/2 the effect through the bad control
## and the other 1/2 through a direct channel
d[, bad_control := .5*tau*D + epsilon]
d[, Y := y0 + bad_control + .5*tau*D + epsilon]
}
d <- make_data(n_rows=10000)
model_1 <- d[ , lm(Y ~ D)]
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(Y ~ bad_control)]
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3)),
omit.stat = c('ser', 'f')
)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## send 1/2 the effect through the bad control
## and the other 1/2 through a direct channel
d[, bad_control := .5*tau*D + .2*epsilon]
d[, Y := y0 + bad_control + .5*tau*D + epsilon]
}
d <- make_data(n_rows=10000)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[, ':='(
## each of these are independent of all others
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
epsilon      = rnorm(n=.N, mean=0, sd=2),
D            = sample(x=0:1, size=.N, replace = TRUE)
)]
## send 1/2 the effect through the bad control
## and the other 1/2 through a direct channel
d[, bad_control := .5*tau*D + .2*epsilon]
d[, Y := y0 + bad_control + .5*tau*D + .8*epsilon]
}
d <- make_data(n_rows=10000)
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(Y ~ bad_control )]
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3)),
omit.stat = c('ser', 'f')
)
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id           = 1:sim_size,
cal_stanford = rep(c('cal', 'stanford'), each = sim_size/2),
affluence    = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),       outcome_pre  = rnorm(sim_size, mean = 100, sd = 7),
treat = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau      := rnorm(sim_size, mean = 5 + I(cal_stanford == 'cal') + affluence)
d[ , outcome_post :=  preY + tau*treat]
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id           = 1:sim_size,
cal_stanford = rep(c('cal', 'stanford'), each = sim_size/2),
affluence    = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),       outcome_pre  = rnorm(sim_size, mean = 100, sd = 7),
treat = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau      := rnorm(sim_size, mean = 5 + I(cal_stanford == 'cal') + affluence)]
d[ , outcome_post :=  preY + tau*treat]
}
## What is the (unobserved) true average treatment effect?
## Estimate a model that includes only the treatment effect.
## Interpret all the coefficients.
mod0 <- ''
## Estimate a model that includes the treatment effect and
## the (highly predictive!) pre-treatment Y val.
mod1 <- ''
## Print the two next to each other, and compare what is going on.
## Tell me what is happening in the differences in the intercept
## and the preY coefficients. Tell me what is happening in the SE
## for the treatment effect.
#stargazer(mod0, mod1, type = "text")
## Subset the data into two groups based on gender and estimate
## a model that only includes the preY and treatment effects.
## Print these two models side by side, and tell me what is going
## on.
mod2 <- ''
mod3 <- ''
# stargazer()
## Based on this, would you conclude that these are different?
## Talk about the 95% CI for each.
## ?confint
## Now, estimate two more models:
##  1. A model with preY, treatment and gender indicator
##  2. A model with prey, treatment, gender, and treatment*gender
##     interaction
##  3. Test for the necessisity of the interaction; first using a
##     t-test. This should be really, really simple. Then, using a
##     f-test for the nested models (see the anova(...) call).
##     Is the p-value the same or different for this test?
##     Why?
mod4 <- ''
mod5 <- ''
## ? anova
## Finally, use the results from model 5 to tell me what the treatment
## effect is for males and for californians.
##
## AT HOME:
## Work to examine what including the other affluence and literacy
## triggers does to your estimates.
##
## Estimate a model that includes only the treatment effect.
## Interpret all the coefficients.
model_0 <- d[ , lm(outcome_post ~ treatment)]
make_data <- function(sim_size) {
d <- data.table(
id           = 1:sim_size,
cal_stanford = rep(c('cal', 'stanford'), each = sim_size/2),
affluence    = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),       outcome_pre  = rnorm(sim_size, mean = 100, sd = 7),
treat = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau      := rnorm(sim_size, mean = 5 + I(cal_stanford == 'cal') + affluence)]
d[ , outcome_post :=  preY + tau*treat]
}
d <- make_data(sim_size = 1000)
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id           = 1:sim_size,
cal_stanford = rep(c('cal', 'stanford'), each = sim_size/2),
affluence    = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),
outcome_pre  = rnorm(sim_size, mean = 100, sd = 7),
treatment_group = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau      := rnorm(sim_size, mean = 5 + I(cal_stanford == 'cal') + affluence)]
d[ , outcome_post :=  outcome_pre + tau*treatment_group]
}
d <- make_data(sim_size = 1000)
## What is the (unobserved) true average treatment effect?
## Estimate a model that includes only the treatment effect.
## Interpret all the coefficients.
model_0 <- d[ , lm(outcome_post ~ treatment)]
## Estimate a model that includes only the treatment effect.
## Interpret all the coefficients.
model_0 <- d[ , lm(outcome_post ~ treatment_group)]
summary(model_0)
d[ , mean(affluence)]
## Estimate a model that includes the treatment effect and
## the (highly predictive!) pre-treatment Y val.
model_1 <- d[ , lm(outcome_post ~ treatment_group + outcome_pre)]
summary(model_1)
d <- make_data(sim_size = 100)
## Estimate a model that includes only the treatment effect.
## Interpret all the coefficients.
model_0 <- d[ , lm(outcome_post ~ treatment_group)]
## Estimate a model that includes the treatment effect and
## the (highly predictive!) pre-treatment Y val.
model_1 <- d[ , lm(outcome_post ~ treatment_group + outcome_pre)]
make_data <- function(sim_size) {
d <- data.table(
id              = 1:sim_size,
cal_stanford    = rep(c('cal', 'stanford'), each = sim_size/2),
affluence       = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),
outcome_pre     = rnorm(sim_size, mean = 100, sd = 7),
treatment_group = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau            := rnorm(sim_size, mean = 5 + I(cal_stanford == 'cal') + affluence)]
d[ , outcome_post   :=  outcome_pre + tau*treatment_group]
return(d)
}
model_0 <- d[ , lm(founding_prob ~ treatment_group)]
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id              = 1:sim_size,
cal_stanford    = rep(c('cal', 'stanford'), each = sim_size/2),
affluence       = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),
founder_motivation = rnorm(sim_size, mean = 100, sd = 7),
treatment_group = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau            := rnorm(sim_size, mean = 5 + I(cal_stanford == 'cal') + affluence)]
d[ , founding_prob  :=  founder_motivation + tau*treatment_group]
return(d)
}
d <- make_data(sim_size = 100)
model_0 <- d[ , lm(founding_prob ~ treatment_group)]
model_1 <- d[ , lm(founding_prob ~ treatment_group + outcome_pre)]
model_1 <- d[ , lm(founding_prob ~ treatment_group + founder_motivation)]
model_cal      <- d[cal_stanford == 'cal', lm(founding_prob ~ treatment_group)]
model_stanford <- d[cal_stanford == 'stanford', lm(founding_prob ~ treatment_group)]
model_cal      <- d[cal_stanford == 'cal', lm(founding_prob ~ treatment_group)]
model_stanford <- d[cal_stanford == 'stanford', lm(founding_prob ~ treatment_group)]
stargazer(
model_cal, model_stanford,
type = 'text'
)
model_interaction <- d[ , lm(founding_prob ~ treatment_group * cal_stanford)]
summary(model_interaction)
d <- make_data(sim_size = 1000)
model_interaction <- d[ , lm(founding_prob ~ treatment_group * cal_stanford)]
summary(model_interaction)
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id              = 1:sim_size,
cal_stanford    = rep(c('cal', 'stanford'), each = sim_size/2),
affluence       = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),
founder_motivation = rnorm(sim_size, mean = 100, sd = 7),
treatment_group = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau            := rnorm(sim_size, mean = 5 + 3*I(cal_stanford == 'cal') + affluence)]
d[ , founding_prob  :=  founder_motivation + tau*treatment_group]
return(d)
}
d <- make_data(sim_size = 1000)
model_interaction <- d[ , lm(founding_prob ~ treatment_group * cal_stanford)]
summary(model_interaction)
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id              = 1:sim_size,
cal_stanford    = rep(c('cal', 'stanford'), each = sim_size/2),
affluence       = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),
founder_motivation = rnorm(sim_size, mean = 100, sd = 7),
treatment_group = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau            := rnorm(sim_size, mean = 5 + 10*I(cal_stanford == 'cal') + affluence)]
d[ , founding_prob  :=  founder_motivation + tau*treatment_group]
return(d)
}
d <- make_data(sim_size = 1000)
model_interaction <- d[ , lm(founding_prob ~ treatment_group * cal_stanford)]
summary(model_interaction)
library(data.table)
library(stargazer)
make_data <- function(sim_size) {
d <- data.table(
id              = 1:sim_size,
cal_stanford    = rep(c('cal', 'stanford'), each = sim_size/2),
affluence       = c(
sample(1:7, size = sim_size/2, replace = T, prob = c(.1, .2, .2, .2, .2, .05, .05)),
sample(1:7, size = sim_size/2, replace = T, prob = c(.05, .05, .05, .15, .2, .2, .3))),
founder_motivation = rnorm(sim_size, mean = 100, sd = 7),
treatment_group = sample(c(0,1), sim_size, replace = TRUE)
)
d[ , capital_access := rnorm(sim_size, mean = d$affluence, sd = 2)]
d[ , tau            := rnorm(sim_size, mean = 5 + 5*I(cal_stanford == 'cal') + affluence)]
d[ , founding_prob  :=  founder_motivation + tau*treatment_group]
return(d)
}
d <- make_data(sim_size = 1000)
model_interaction <- d[ , lm(founding_prob ~ treatment_group * cal_stanford)]
summary(model_interaction)
library(foreign)
library(data.table)
d <- read.csv("http://hdl.handle.net/10079/cd6be01a-a827-4312-a2fa-74329ce7f96d")
head(d)
model_1 <- d[ , lm(tip ~ happyface)]
d <- fread("http://hdl.handle.net/10079/cd6be01a-a827-4312-a2fa-74329ce7f96d")
head(d)
model_1 <- d[ , lm(tip ~ happyface)]
summary(model_1)
d
model_interaction <- d[ , lm(tip ~ happyface + female + happyface*female)]
summary(model_interaction)
model_male   <- d[female == 1 , lm(tip ~ happyface)]
model_female <- d[female == 0 , lm(tip ~ happyface)]
summary(model_male)
summary(model_female)
stargazer(
model_male, model_female,
type = 'text'
)
stargazer(
model_male, model_female, model_1
type = 'text'
stargazer(
model_male, model_female, model_1,
type = 'text'
)
model_1
model_1 <- d[ , lm(tip ~ happyface + female)]
summary(model_1)
stargazer(
model_male, model_female, model_1,
type = 'text'
)
stargazer(
model_male, model_female, model_1, model_interaction,
type = 'text'
)
model_female <- d[female == 1 , lm(tip ~ happyface)]
model_male   <- d[female == 0 , lm(tip ~ happyface)]
stargazer(
model_male, model_female, model_1, model_interaction,
type = 'text'
)
