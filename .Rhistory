D            = sample(x=0:1, size=.N, replace=TRUE))][ , ':='(
bad_control  = .2 * D + rnorm(n=.N, mean=0),
Y            = y0 + D*tau + bad_control + rnorm(n=.N)
)]
}
d <- make_data(n_rows=1000)
make_data <- function(n_rows=1000) {
d <- data.table(
id = 1:n_rows,
key = 'id'
)
d[ , ':='(
y0           = runif(min=-10, max=10, n=.N),
tau          = rnorm(n=.N, mean=4),
D            = sample(x=0:1, size=.N, replace=TRUE))][ , ':='(
bad_control  = .2 * D + rnorm(n=.N, mean=0))][ , ':='(
Y            = y0 + D*tau + bad_control + rnorm(n=.N)
)]
}
d <- make_data(n_rows=1000)
model_1 <- d[ , lm(Y ~ D)]
model_2 <- d[ , lm(Y ~ bad_control)]
stargazer(
model_1, model_2,
type = 'text',
se = list(rse(model_1), rse(model_2)),
omit.stat = c('ser', 'f')
)
model_3 <- d[ , lm(Y ~ D + bad_control)]
stargazer(
model_1, model_2, model_3,
type = 'text',
se = list(rse(model_1), rse(model_2), rse(model_3))
)
getwd()
setwd('~/MIDS/w241/mids-w241-live-session/')
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
library(sandwich) # estimates HCE easily
library(lmtest)   # sets up t-test easily
petersen
data(petersen)
data(petersen)
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
underlying <- rep(1:7, each = 100) * 14
underlying
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14
)
d
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 14)
)
d
rexp(10, 1)
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 14)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 1)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 1)]
d
d[ , plot(measured)]
d[1:100, measured]
d[ , t.test(measured ~ group)]
d[ , t.test(underlying ~ group)]
d[ , t.test(measured ~ group)]
d[ , t.test(underlying ~ group)]
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 14)
)
d[ , .N]
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 1)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 1)]
d[ , plot(measured)]
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 2)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 2)]
d[ , plot(measured)]
rexp(10, 2)
rexp(10, 1)
rexp(10, .5)
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 0.5)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 0.5)]
d[ , plot(measured)]
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 0.25)]
d[ , plot(measured)]
d[1:100, measured]
d[ , t.test(measured ~ group)]
d[ , t.test(underlying ~ group)]
d[1:100, underlying]
d[1:100,]
d[ , plot(measured, col = group)]
?cut
d[ , f := cut(x=measured, breaks=c(22, 36, 50, 64, 78, 92))]
d[ , f]
d[ , f := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120))]
d[ , f]
d[ , f := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120), labels = c('1', '2', '3', '4', '5', '6', '7'))]
d[ , f]
d[ , t.test(f ~ group)]
d[ , t.test(as.numeric(f) ~ group)]
d[ , t.test(as.numeric(as.character(f)) ~ group)]
d[ , t.test(measured)]
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 0.25)]
d[ , f := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120), labels = c('1', '2', '3', '4', '5', '6', '7'))]
d[ , t.test(as.numeric(as.character(f)) ~ group)]
d[ , t.test(measured)]
## Suppose you had the following data
d
library(data.table)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , measured := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', measured := underlying - 1 + rexp(.N, 0.25)]
d[ , likert := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120), labels = c('1', '2', '3', '4', '5', '6', '7'))]
## Suppose you had the following data
d
d[ , .(id, group, likert)]
library(ggplot2)
d %>%
ggplot() +
aes(x = group, y = likert) +
geom_boxplot()
?geom_boxplot()
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot()
d %>%
ggplot() +
aes(x = group, y = as.numeric(likert)) +
geom_boxplot()
d %>%
ggplot() +
aes(x = group, y = measured) +
geom_boxplot()
d[ , t.test(as.numeric(likert) ~ group)]
d[ , t.test(measured ~ group)]
d[ , t.test(as.numeric(likert) ~ group)]
d[ , t.test(measured ~ group)]
d[ , .(id, group, metric)]
library(data.table)
library(ggplot2)
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d[ , likert := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120), labels = c('1', '2', '3', '4', '5', '6', '7'))]
## Suppose you had the following data
d[ , .(id, group, metric)]
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=22)
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=22, slope=0)
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=c(22, 36), slope=0)
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0)
theme_set(theme_minimal())
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0. color='grey80')
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0, color='grey80')
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0, color='grey90')
d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0, color='grey40')
fwrite(d, file = '~/Desktop/super_foo.csv')
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point()
outcome_plot
outcome_plot <- d %>%
ggplot() +
aes(x=sample(id), y=metric) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d[ , likert := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120), labels = c('1', '2', '3', '4', '5', '6', '7'))]
d <- d[ , .(sample(id), group, metric)]
fwrite(d, file = '~/Desktop/super_foo.csv')
## Suppose you had the following data
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d[ , likert := cut(x=measured, breaks=c(-10, 22, 36, 50, 64, 78, 92, 120), labels = c('1', '2', '3', '4', '5', '6', '7'))]
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(sample(id), group, metric)]
fwrite(d, file = '~/Desktop/super_foo.csv')
## Suppose you had the following data
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
rm(list = ls())
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(sample(id), group, metric)]
fwrite(d, file = '~/Desktop/super_foo.csv')
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
d
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(id = sample(id), group, metric)]
fwrite(d, file = '~/Desktop/super_foo.csv')
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
d
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(id = sample(id), group, metric)]
setkeyv(d, 'id')
fwrite(d, file = '~/Desktop/super_foo.csv')
## Suppose you had the following data
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
d
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric, color = group) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
d %>%
ggplot() +
aes(x=metric) +
geom_histogram()
d %>%
ggplot() +
aes(x=metric, fill = group) +
geom_histogram()
d %>%
ggplot() +
aes(x=metric, fill = group) +
geom_histogram(position = 'dodge')
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(id = sample(id), group, metric)]
setkeyv(d, 'id')
fwrite(d, file = '~/Desktop/super_foo.csv')
## Suppose you had the following data
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric, color = group) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
## And you decide that you're going to cut this into a seven point scale, breaking the data into reasonable pieces.
outcome_plot +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0, color='grey40')
d %>%
mutate(
likert_variable=cut(
x=metric,
breaks=c(-10, 22, 36, 50, 64, 78, 92, 120),
labels = c('1', '2', '3', '4', '5', '6', '7'))
)
d <- d %>%
mutate(
likert_variable=cut(
x=metric,
breaks=c(-10, 22, 36, 50, 64, 78, 92, 120),
labels = c('1', '2', '3', '4', '5', '6', '7'))
)
t.test(metric ~ group, data = d)
d <- d %>%
mutate(
likert_variable=cut(
x=metric,
breaks=c(-10, 22, 36, 50, 64, 78, 92, 120),
labels = c('1', '2', '3', '4', '5', '6', '7'))
)
## What do you learn if you conduct a
wilcox.test(likert_variable ~ group, data = d)
## What do you learn if you conduct a
wilcox.test(as.numeric(likert_variable) ~ group, data = d)
t.test(metric ~ group, data = d)
source("~/.active-rstudio-document", echo=TRUE)
## What do you learn if you conduct a t-test of the mean difference between `metric` based on `group`?
t.test(metric ~ group, data = d)
## What do you learn if you conduct a t-test of the mean difference between `likert_variable` based on `group`?
t.test(as.numeric(likert_variable) ~ group, data = d)
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(id = sample(id), group, metric)]
setkeyv(d, 'id')
fwrite(d, file = '~/Desktop/super_foo.csv')
## Suppose you had the following data
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric, color = group) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
## And you decide that you're going to cut this into a seven point scale, breaking the data into reasonable pieces.
outcome_plot +
geom_abline(intercept=seq(from=22, to=92, by=14), slope=0, color='grey40')
d <- d %>%
mutate(
likert_variable=cut(
x=metric,
breaks=c(-10, 22, 36, 50, 64, 78, 92, 120),
labels = c('1', '2', '3', '4', '5', '6', '7'))
)
## What do you learn if you conduct a t-test of the mean difference between `metric` based on `group`?
t.test(metric ~ group, data = d)
## What do you learn if you conduct a t-test of the mean difference between `likert_variable` based on `group`?
t.test(as.numeric(likert_variable) ~ group, data = d)
library(data.table)
library(ggplot2)
theme_set(theme_minimal())
d <- data.table(
id = 1:700,
underlying = rep(1:7, each = 100) * 14,
group = rep(rep(c('red', 'blue'), each = 50), 7)
)
d[group == 'red' , metric := underlying + 1 - rexp(.N, 0.25)]
d[group == 'blue', metric := underlying - 1 + rexp(.N, 0.25)]
d <- d[ , .(id = sample(id), group, metric)]
setkeyv(d, 'id')
fwrite(d, file = '~/Desktop/super_foo.csv')
## Suppose you had the following data
d <- read_csv(file = "~/Desktop/super_foo.csv")
outcome_plot <- d %>%
ggplot() +
aes(x=id, y=metric, color = group) +
geom_point() +
labs(title = "Distribution of Points")
outcome_plot
## And you decide that you're going to cut this into a seven point scale, breaking the data into reasonable pieces.
outcome_plot +
geom_abline(intercept=seq(from=21, to=91, by=14), slope=0, color='grey40')
d <- d %>%
mutate(
likert_variable=cut(
x=metric,
breaks=c(-10, 21, 35, 49, 63, 77, 91, 120),
labels = c('1', '2', '3', '4', '5', '6', '7'))
)
## What do you learn if you conduct a t-test of the mean difference between `metric` based on `group`?
t.test(metric ~ group, data = d)
## What do you learn if you conduct a t-test of the mean difference between `likert_variable` based on `group`?
t.test(as.numeric(likert_variable) ~ group, data = d)
## What do you learn if you conduct a wilcox-test of the difference in medians between `likert_variable` based on `group`?
wilcox.test(as.numeric(likert_variable) ~ group, data = d)
